# Generated by Django 4.0.5 on 2022-09-07 09:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_trainer', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('short_description', models.CharField(max_length=500)),
                ('image', models.ImageField(default='static/exercise.png', upload_to='exercises/')),
                ('video', models.URLField(blank=True, max_length=250, null=True)),
                ('slug', models.SlugField(blank=True, max_length=300, null=True, unique=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='fitness.category')),
            ],
        ),
        migrations.CreateModel(
            name='Trainee',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('age', models.IntegerField(blank=True, default=25, null=True)),
                ('height', models.IntegerField(default=165, null=True)),
                ('weight', models.IntegerField(default=70, null=True)),
                ('blood_type', models.CharField(choices=[('O+', 'O+'), ('O-', 'O-'), ('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-')], default='O+', max_length=250)),
                ('bio', models.TextField(default='')),
                ('image', models.ImageField(blank=True, null=True, upload_to='trainees/')),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('experience', models.IntegerField(blank=True, null=True)),
                ('specialty', models.CharField(max_length=250)),
                ('bio', models.TextField(default='')),
                ('image', models.ImageField(blank=True, null=True, upload_to='trainers/')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('trainer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='fitness.trainer')),
                ('name', models.CharField(max_length=250)),
                ('price', models.IntegerField(default=10)),
                ('description', models.CharField(max_length=250)),
                ('duration', models.IntegerField(default=30)),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reps', models.IntegerField(default=5)),
                ('sets', models.IntegerField(default=5)),
                ('time', models.TimeField(default='10:00')),
                ('date', models.DateField(default='2022-09-01')),
                ('done', models.BooleanField(default=False)),
                ('exercise', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='fitness.exercise')),
                ('trainee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='fitness.trainee')),
            ],
        ),
        migrations.AddField(
            model_name='exercise',
            name='trainer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='fitness.trainer'),
        ),
        migrations.CreateModel(
            name='SubscriptionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('active', models.BooleanField()),
                ('payment_status', models.BooleanField()),
                ('auto_renew', models.BooleanField()),
                ('trainee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trainees', to='fitness.trainee')),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='fitness.subscription')),
            ],
        ),
    ]
